apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.32.0 (HEAD)
  labels:
    io.kompose.service: consumer
  name: consumer-shubhankar
  namespace: pkc-devc19rzw5
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: consumer
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.32.0 (HEAD)
      labels:
        io.kompose.network/docker-spire-kafka-consumer-example-default: "true"
        io.kompose.service: consumer
    spec:
      containers:
        - env:
            - name: BOOTSTRAP_SERVERS
              value: pkc-devc19rzw5.us-west-2.aws.devel.cpdev.cloud:9092
            - name: LKC
              value: lkc-devc3mk0gw
            - name: PRINCIPAL
              value: sub
            - name: SOCKET_PATH
              value: unix:/opt/spire/sockets/workload_api.sock
            - name: TOPIC
              value: kafka-spire-test
          image: 519856050701.dkr.ecr.us-west-2.amazonaws.com/docker/dev/confluentinc/cc-base:kafka-consumer-spire-shubhankar
          imagePullPolicy: Always
          name: consumer-shubhankar
          resources: {}
          volumeMounts:
            - mountPath: /opt/spire/sockets
              name: spire-agent-socket
              readOnly: true
      volumes:
        - name: spire-agent-socket
          hostPath:
            path: /opt/spire/sockets
            type: DirectoryOrCreate
      restartPolicy: Always
status: {}
